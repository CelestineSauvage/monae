* Monadic equational reasoning in Coq

This repository contains a formalization of monads including examples
of monadic equational reasoning and several models (in particular, a
model for a monad that mixes non-deterministic choice and
probabilistic choice). This corresponds roughly to the formalization
of the following papers:
- [Gibbons and Hinze, Just do It: Simple Monadic Equational Reasoning, ICFP 2011] (except Sect. 10.2)
- [Gibbons, Unifying Theories of Programming with Monads, UTP 2012] (up to Sect. 7.2)
- [Mu, Equational Reasoning for Non-determinism Monad: A Case study of Spark Aggregation, TR-IIS-19-002, Academia Sinica]
- [Mu, Calculating a Backtracking Algorithm: An exercise in Monadic Program Derivation, TR-IIS-29-003, Academia Sinica]
- [Mu, Functional Pearls: Reasoning and Derivation of Monadic Programs, A case study of non-determinism and state, 2017]
  + This is a draft paper. In the first release, we formalized this draft up to Sect. 5.
    The contents have been since superseded by [mu2019tr2] and [mu2019tr3].

This library has been applied to other formalizations:
- application to program semantics (see files ~smallstep*.v~)
- formalization of monad composition [Jones and Duponcheel, Composing Monads, Yale RR 1993] (Sections 2 and 3)
- formalization of monad transformers [Jaskelioff, Modular Monad Transformers, ESOP 2009] (up to Sect. 4)
- formalization of the geometrically convex monad (main reference:
  [Cheung, Distributive Interaction of Algebraic Effects, PhD Thesis, U. Oxford, 2017])

** Available monads
    [[hier.png]]

** Files

- [[monae_lib.v][monae_lib.v]]: simple additions to base libraries
- [[monad.v][monad.v]]: basics of monadic equational reasoning
- [[category.v][category.v]]: formalization of categories (generalization of ~monad.v~)
- [[fail_monad.v][fail_monad.v]]: fail monad and related monads
- [[state_monad.v][state_monad.v]]: state-related monads
- [[trace_monad.v][trace_monad.v]]: about the state-trace monad
- [[proba_monad.v][proba_monad.v]]: about the probability monad
- [[monad_composition.v][monad_composition.v]]: composing monads
- [[monad_transformer.v][monad_transformer.v]]: monad transformers
- [[monad_model.v][monad_model.v]]: concrete models of monads (corresponding to ~{,state_,trace_}monad.v~)
- [[proba_monad_model.v][proba_monad_model.v]]: concrete model of the probability monad
- [[gcm_model.v][gcm_model.v]]: model of the geometrically convex monad
- [[altprob_model.v][altprob_model.v]]: model of a monad that mixes non-deterministic choice and probabilistic choice
- [[example_spark.v][example_spark.v]]: example of Spark aggregation
- [[example_nqueens.v][example_nqueens.v]]: example of the n-queens puzzle
- [[example_relabeling.v][example_relabeling.v]]: example of tree relabeling
- [[example_monty.v][example_monty.v]]: examples of Monty Hall problem
- [[smallstep.v][smallstep.v]]: semantics for an imperative language
- [[smallstep_monad.v][smallstep_monad.v]]: equivalence operational semantics/denotation
- [[smallstep_examples.v][smallstep_examples.v]]: sample imperative programs

** Installation

   The preferred way to install monae is with opam because it takes
   care of the dependencies with other libraries. If not already done,
   add the repository for Coq libraries to opam and update:

1. ~opam repo add coq-released https://coq.inria.fr/opam/released~
2. ~opam update~

*** Last stable version:

Version 0.0.3:
3. ~opam install coq-monae~

**** Requirements

- [[https://coq.inria.fr][Coq]] 8.10
- [[https://github.com/math-comp/math-comp][Mathematical Components library]] 1.9.0
- [[https://github.com/affeldt-aist/infotheo][infotheo]] 0.0.5
  + which requires [[https://github.com/math-comp/analysis][MathComp-Analysis]] 0.2.2
    * which requires
      - [[https://github.com/math-comp/bigenough/][bigenough]] first release
      - [[https://github.com/math-comp/finmap][finmap]] 1.2.1

All versions available from opam.

*** Development version (git master):

With Coq 8.10 and the development version of infotheo.

3. ~git clone git@github.com:affeldt-aist/monae.git~
4. ~cd monae~

If opam is installed, do:

5. ~opam install .~

opam takes care of the dependencies.

If opam is not installed but if the requirements are met, do:

1. ~make~
2. ~make install~

*** About Windows 10

Installation of monae on Windows is less simple.
First install infotheo following the [[https://github.com/affeldt-aist/infotheo][instructions for Windows 10]].
Once infotheo is installed:
1. If opam is available, do
   + ~opam install coq-monae~ or ~git clone git@github.com:affeldt-aist/monae.git; opam install .~
2. If opam is not available (i.e., installation of MathComp using unzip, untar, cd, make, make install),
   do:
   + ~git clone git@github.com:affeldt-aist/monae.git~
   + ~coq_makefile -o Makefile -f _CoqProject~
   + ~make~

** License

GNU GPLv3

** Reference
   [[https://staff.aist.go.jp/reynald.affeldt/bib/bib_en.html#affeldt2019mpc][MPC 2019 paper]]

