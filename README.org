* Experimenting with monadic equational reasoning in Coq

This repository contains a formalization of monadic equational
reasoning and its application to the formalization of program
semantics:
- formalization of
  + [Gibbons and Hinze, Just do It: Simple Monadic Equational Reasoning, ICFP 2011]
  + with parts of [Gibbons, Unifying Theories of Programming with Monads, UTP 2012]
- formalization of some examples from [Mu, Functional Pearls: Reasoning and Derivation of Monadic Programs, A case study of non-determinism and state, 2017]
- application to program semantics

** Files

- [[monad.v][monad.v]]: basics of monadic equational reasoning
- [[monad_model.v][monad_model.v]] models of basic monads
- [[state_monad.v][state_monad.v]]: state monad-related part
- [[proba_monad.v][proba_monad.v]]: probability monad-related part
- [[proba_model.v][proba_model.v]]: model of the probability monad
  + see Requirements for compilation information
- [[trace_monad.v][trace_monad.v]]: state-trace monad
- [[trace_model.v][trace_model.v]]: model of the state-trace monad
- [[smallstep.v][smallstep.v]]: semantics for an imperative language
- [[smallstep_monad.v][smallstep_monad.v]]: equivalence operational semantics/denotation
- [[smallstep_examples.v][smallstep_examples.v]]: sample programs

- ssrZ.v: SSReflect-like interface for the type Z of the standard library of Coq
  + comes from https://github.com/affeldt-aist/seplog
  + copied verbatim here for convenience

** Requirements

- [[https://coq.inria.fr][Coq 8.8.0]] or higher, [[https://math-comp.github.io/math-comp/][MathComp 1.7]]
- the compilation of [[proba_model.v][proba_model.v]] requires the installation of
  another library called [[https://github.com/affeldt-aist/infotheo][infotheo]]
  + once infotheo is installed, just add ~proba_monad.v~ to the
    ~_CoqProject~ file and compilation should succeed

** Installation

1. ~coq_makefile -f _CoqProject -o Makefile~
2. ~make~
